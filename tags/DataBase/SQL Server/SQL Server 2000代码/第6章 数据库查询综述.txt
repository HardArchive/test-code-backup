6.1.2  查询特定列的信息
1．查询表中所有的列
例如，从数据库“图书管理系统”中查询“出版社信息表”的所有行。
USE 图书管理系统
SELECT *
FROM 出版社信息表
在工具栏上单击【执行查询】按钮或按F5键执行查询命令，待命令完成后，在查询结果窗口中显示查询结果，该查询结果显示“出版社信息表”中所有列的信息，如图6-1所示。
也可以在关键字SELECT后，按创建表时各列在表中的顺序列出所有的列名，将会得到与用SELECT * 完全相同的结果。
在SQL查询分析器中输入下面的语句：
USE 图书管理系统
SELECT 出版社编号,出版社名称,出版社所在城市,出版社电话
FROM 出版社信息表
其查询结果与图6-1所示相同。
2.查询指定表中所有行
返回数据库“图书管理系统”的“学生信息表”的所有行。
USE 图书管理系统
SELECT*
FROM 学生信息表
执行上述语句后，在查询结果窗口中显示“学生信息表”中所有列的信息，如图6-2所示。
3.查询表中指定的列
例如，从数据库“图书管理系统”的“作者表”中查询列为“作者姓名”，“性别”，“电话”的作者信息。
USE 图书管理系统
SELECT 作者姓名,性别,电话
FROM 作者表
4.为列取别名并只返回前n行
例如，从数据库“图书管理系统”的“出版社信息表”中查询列“出版社名称”，“出版社所在城市”，“出版社电话”的相关数据，并且为这些列取别名，同时只返回前5条记录。
USE 图书管理系统
SELECT TOP 5 出版社名称 AS pub_name,出版社所在城市 AS pub_city,
出版社电话 AS pub_telephone
FROM 出版社信息表
执行以上命令后，查询结果窗口中显示指定查询的前5条记录，如图6-5所示。
5．使用单引号加入字符串
例如，在数据库“图书管理系统”中，查询“图书明细表”的“图书名称”和“定价”，并且在“定价”前面显示“价格为”，要求只返回前8行。
USE 图书管理系统
SELECT TOP 8 图书名称,'价格为',定价
FROM 图书明细表
执行上述命令后，查询结果窗口中显示指定查询的前8条记录，并在“定价”前显示字符串“价格为”，如图6-6所示。
6.1.3  使用算术运算符
1.例如，从数据库“图书管理系统”的“图书明细表”中，查询列“图书名称”和“定价”为八折后的“新价格”的图书信息。
USE 图书管理系统
SELECT 图书名称,定价*0.8 AS 新价格
FROM 图书明细表
在查询结果窗口中显示“图书名称”以及图书在打折后的“新价格”，如图6-7所示。
2.利用算术运算符+(加)对查询结果进行计算
查询数据库“图书管理系统”的“借出信息”表中的“图书编号”、“借书证号”和“应还日期”和“应还日期”推迟31天后“新应还日期”的相关信息。
USE 图书管理系统
SELECT 图书编号,借书证号,应还日期,应还日期+31 as 新应还日期
FROM 借出信息
执行以上命令后，在查询结果窗口中显示“新应还日期”，新的应还日期延长了一个月，如图6-8所示。
6.2.1  比较运算符
1.例如，从数据库“图书管理系统”的“图书明细表”中，查询“定价”大于50的所有图书，并在查询结果中显示列“图书编号”、“图书名称”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书编号,图书名称,出版日期,定价
FROM 图书明细表
WHERE 定价>50
在查询结果窗口中显示“定价”大于50的图书信息，如图6-9所示。
2.利用比较运算符“=”限定查询条件
从数据库“图书管理系统”的“作者表”中，查询“籍贯”是“北京”的所有作者，并在查询结果中显示列“作者姓名”和“籍贯”。
USE 图书管理系统
SELECT 作者姓名,籍贯
FROM 作者表
WHERE 籍贯='北京'
在查询结果窗口中显示籍贯是北京的作者，如图6-10所示。
3.利用比较运算符“<”限定查询条件
从数据库“图书管理系统”的“学生表”中，查询“出生日期”在1988年7月1日以前的学生，并返回这些学生的所有信息。
在查询分析器的命令窗口中输入以下语句：
USE 图书管理系统
SELECT *
FROM 学生信息表
WHERE 出生日期<'1988-7-1'
在查询结果窗口中显示出生在1988年7月1日之前的学生的所有信息，如图6-11所示。
4.利用比较运算符“!=”限定查询条件
从数据库“图书管理系统”的“作者表”中，查询“籍贯”不是“北京”的作者信息，并返回列“作者姓名”、“性别”、“家庭住址”和“籍贯”。
USE 图书管理系统
SELECT 作者姓名,性别,家庭住址,籍贯
FROM 作者表
WHERE 籍贯!='北京'
在查询结果窗口中显示籍贯不是北京的作者信息，如图6-12所示。
6.2.2  逻辑运算符
1.例如，从数据库“图书管理系统”的“作者表”中，查询“性别”为“男”，并且“籍贯”是“北京”的作者信息。
USE 图书管理系统
SELECT *
FROM 作者表
WHERE 性别='男' AND 籍贯='北京'
在查询结果窗口中显示“性别”为“男”，并且“籍贯”是“北京”的作者的信息，如图6-13所示。
2.利用逻辑运算符“OR”限定查询条件
从数据库“图书管理系统”的“作者表”中，查询“籍贯”是“河南郑州”或“河北石家庄”的作者信息。
USE 图书管理系统
SELECT *
FROM 作者表
WHERE 籍贯='河南郑州' OR 籍贯='河北石家庄'
在查询结果窗口中显示籍贯是河南郑州或河北石家庄的作者信息，如图6-14所示。
3.利用逻辑运算符“NOT”限定查询条件
从数据库“图书管理系统”的“学生信息表”中，查询“政治面貌”不是“中国共产党员”的学生信息，并且返回列“姓名”、“性别”、“出生日期”、“系别”和“政治面貌”。
USE 图书管理系统
SELECT 姓名,性别,出生日期,系别,政治面貌
FROM 学生信息表
WHERE NOT 政治面貌='中国共产党员'
在查询结果窗口中显示政治面貌不是中国共产党的学生信息，如图6-15所示。
6.2.3  BETWEEN关键字
1.例如，从数据库“图书管理系统”的“图书明细表”中，查询“定价”在50到100之间的图书信息，并且返回列“图书名称”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 定价 BETWEEN 50 AND 100
该查询结果窗口显示中显示定价在50到100之间的图书信息，如图6-16所示。
2.利用NOT BETWEEN限定查询条件
从数据库“图书管理系统”的“作者表”中，查询“作者编号”不在10010到10020范围之内的作者信息，并且返回所有列。
USE 图书管理系统
SELECT *
FROM 作者表
WHERE 作者编号 NOT BETWEEN 10005 AND 10020
在查询结果窗口中显示作者编号不在10010和10020之内的作者信息，如图6-17所示。
3.利用BETWEEN和NOT BETWEEN联合限定查询条件
从数据库“图书管理系统”的“图书明细表”中，查询“作者编号”在10011到10020之间且“定价”不在30到150之间的图书信息，并且返回列“图书名称”、“作者编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,作者编号,出版日期,定价
FROM 图书明细表
WHERE 作者编号 BETWEEN 10010 AND 10020
         AND 定价 NOT BETWEEN 30 AND 150
在查询结果窗口中显示作者编号在10011和10020之间并且定价不在30到150之间的图书信息，如图6-18所示。
6.2.4  IN关键字
1.例如，从数据库“图书管理系统”的“学生信息表”中，查询“系别”是“工业工程”和“机械自动化”的学生信息，并返回列“学号”、“班号”、“姓名”、“性别”、“出生日期”、“系别和家庭住址”。
USE 图书管理系统
SELECT 学号,班号,姓名,性别,出生日期,系别,家庭住址
FROM 学生信息表
WHERE 系别 IN ('工业工程','机械自动化')
在查询结果窗口中显示系别是工业工程和机械自动化的学生信息，如图6-19所示。
2.利用NOT IN限定查询条件
从数据库“图书管理系统”的“出版社信息表”中，查询“出版社所在城市”不是“北京”的出版社信息，并且返回所有列。
USE 图书管理系统
SELECT *
FROM 出版社信息表
WHERE 出版社所在城市 NOT IN ('北京')
在查询结果窗口中显示地理位置不在北京的出版社信息，如图6-20所示。
3.利用IN和NOT IN联合限定查询条件
从数据库“图书管理系统”的“图书明细表”中，查询“作者编号”是10007、10008、10021之一且“出版社编号”不是1001、1005、1008的图书信息，并返回列“图书名称”、“作者编号”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,作者编号,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 作者编号 IN ('10007','10008','10021')
              AND 出版社编号 NOT IN('1001','1005','1008')
在查询结果窗口中显示作者是作者编号为10007、10008和10021之一，并且出版社不是出版社编号1001、1005和1008之一的图书信息，如图6-21所示。
6.2.5  LIKE关键字
1.例如，从数据库“图书管理系统”的“作者表”中，查询姓王的作者信息，并返回所有列。
USE 图书管理系统
SELECT *
FROM 作者表
WHERE 作者姓名 LIKE '王%'
在查询结果窗口中显示姓王的作者信息，如图6-22所示。
2.利用'N[xy]%'限定查询条件
从数据库“图书管理系统”的“图书明细表”中，查询“图书名称”以A开头，第二个字符是S或c的图书信息，并返回列“图书名称”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 图书名称 LIKE 'A[Sc]%'
在查询结果窗口中显示图书名称以A开头，第二个字符是S或c的图书信息，如图6-23所示。
3.利用'N[^xy]% '限定查询条件
从数据库“图书管理系统”的“图书明细表”中，查询“图书名称”以A开头，第二个字符不是c或u的图书信息，并返回列“图书名称”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 图书名称 LIKE 'A[^cu]%'
在查询结果窗口中显示图书名称以A开头，第二个字符不是c或u的图书信息，如图6-24所示。
4.利用'N_M%'限定查询条件
从数据库“图书管理系统”的“图书明细表”中，查询“图书名称”以A开头，第二个为任意字符，且第三个字符是t的图书信息，并返回列“图书名称”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书名称,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 图书名称 LIKE 'A_t%'
在查询结果窗口中显示图书名称以A开头，第三个字符为t的图书信息，如图6-25所示。
6.2.6  选择空值
例如，从数据库“图书管理系统”的“图书明细表”中，查询“出版日期”未添加（即为空值）的图书信息，并返回列“图书编号”、“图书名称”、“作者编号”、“出版社编号”、“出版日期”和“定价”。
USE 图书管理系统
SELECT 图书编号,图书名称,作者编号,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 出版日期 IS NULL
在查询结果窗口中显示出版日期未添加的图书信息，如图6-26所示。
6.3.1  ORDER BY子句
1.例如，查询数据库“经销商”的“进货表”中的所有进货信息，要求返回列“进货编号”，“商品编号”、“进货数量”、“销售人员编号”、“进货时间”，并按“进货时间”排序。
USE 经销商
SELECT 进货编号,商品编号,进货数量,销售人员编号,进货时间
FROM 进货表
ORDER BY 进货时间 ASC
在查询结果窗口中显示“进货表”的信息，并且按“进货时间”的升序排序，如图6-27所示。
2.利用DESC对指定表进行排序
查询数据库“经销商”的“商品信息表”中的最贵的八种商品信息，要求返回所有列，并按“单价”的降序进行排列。
USE 经销商
SELECT TOP 8 *
FROM 商品信息表
ORDER BY 单价 DESC
在查询结果窗口中显示最贵的前8种商品信息，并且按“单价”的降序排序，如图6-28所示。
3.利用嵌套排序对查询结果排序
查询数据库“经销商”的“销售表”中售出商品信息，要求返回所有列，并先按“金额”的降序排序，再按“售出时间”的升序排序。
USE 经销商
SELECT *
FROM 销售表
ORDER BY 金额 DESC,售出时间 ASC
在查询结果窗口中显示售出商品信息，并且先按“金额”降序排序，在按“售出时间”升序排序，如图6-29所示。
6.3.2  GROUP BY子句
1.例如，在数据库“经销商”的“进货表”中，按“销售人员编号”分组，查询每个销售人员的进货量，并按进货量的降序排序。
USE 经销商
SELECT 销售人员编号,SUM(进货数量) AS 总计进货量
FROM 进货表
GROUP BY 销售人员编号
ORDER BY 总计进货量 DESC
在查询结果窗口中显示每个销售人员的销售量，如图6-30所示。
2.在GROUP BY子句中可以列出多个列来嵌套组，即可以通过列的任意组合分组表。
例如，在数据库“经销商”的“商品信息表”中，按“商品名称”和“供应商代号”分组，查询同一类商品的平均价格，并对查询结果按“平均价格”的降序排序。
USE 经销商
SELECT 商品名称,供应商代号,AVG(单价) AS 平均价格
FROM 商品信息表
GROUP BY 商品名称,供应商代号
ORDER BY 平均价格 DESC
在查询结果窗口中显示按“商品名称”和“供应商代号”分组的同一类商品的平均价格，如图6-31所示。
3.在包含GROUP BY子句的查询中可以使用WHERE子句。利用WHERE中的条件可在分组之前消除不符合WHERE条件的行。
例如，在数据库“经销商”的“销售表”中，按“顾客编号”分组，查询顾客在“销售人员编号”为1008的销售人员柜台上的消费额，并且按“顾客编号”的升序排序。
USE 经销商
SELECT 顾客编号,SUM(金额) AS 消费额
FROM 销售表
WHERE 销售人员编号='1008'
GROUP BY 顾客编号
ORDER BY 顾客编号
在查询结果窗口中显示顾客在“销售编号”为1008的销售人员柜台上的消费额，如图6-32所示。
4.在GROUP BY子句中，如果使用T-SQL提供的关键字ALL，那么查询结果将包括由GROUP BY子句产生的所有组，即会显示某些组没有符合搜索条件的行。如果没有使用ALL关键字，则包含GROUP BY子句的SELECT语句将不显示没有符合条件的行的组。
例如，在上例中的GROUP BY子句中添加关键字ALL，即将语句改写为：
USE 经销商
SELECT 顾客编号,SUM(金额) AS 消费额
FROM 销售表
WHERE 销售人员编号='1008'
GROUP BY ALL 顾客编号 
ORDER BY 顾客编号
在查询结果中不仅显示符号搜索条件的行，还显示没有符合搜索条件的行，即“消费额”为空值NULL，如图6-33所示。
6.3.3  HAVING子句
1.例如，从数据库“经销商”的“销售表”中，按“销售人员编号”分组，查询销售人员接待的顾客数及销售额，并按销售额的降序显示顾客数大于5销售信息。
USE 经销商
SELECT 销售人员编号,COUNT(*) AS 顾客数,SUM(金额) AS 销售额
FROM 销售表
GROUP BY 销售人员编号
HAVING COUNT(*)>5
ORDER BY 销售额 DESC
2.在查询结果窗口中显示每一个销售人员接待的顾客数及其销售额，如图6-34所示。
可以用HAVING子句为一个整体的组指定条件，从而限定查询中出现的组，只有符合条件的组才出现在查询中。
例如，在数据库“经销商”的“商品信息表”中，按“供应商代号”和“商品名称”分组，查询同一类商品的平均价格大于800的商品信息，并对查询结果按“平均价格”的降序排序。
USE 经销商
SELECT 供应商代号,商品名称,AVG(单价) AS 平均价格
FROM 商品信息表
GROUP BY 供应商代号,商品名称
HAVING AVG(单价)>800
ORDER BY 平均价格 DESC
在查询结果窗口中显示按“供应商代号”和“商品名称”分组且平均价格大于800的同一类商品信息，如图6-35所示。
3.如果HAVING子句中包含有多个条件，那么可以通过关键字AND、OR或NOT组合为HAVING子句的搜索条件。
例如，在数据库“经销商”的“销售表”中，按“销售人员编号”分组，查询销售人员接待顾客数大于6或者个人销售额大于10000的销售信息。
USE 经销商
SELECT 销售人员编号,COUNT(*) AS 顾客数,
        SUM(金额) AS 销售额
FROM 销售表
WHERE 销售人员编号>'1003'
GROUP BY 销售人员编号
HAVING  COUNT(*)>6  OR  SUM(金额)>10000
在查询结果窗口中显示销售人员接待顾客数大于6或者销售额大于10000的销售信息，如图6-36所示。
4.利用HAVING子句指定搜索条件
在数据库“图书管理系统”的“图书明细表”中，按“作者编号”和“出版社编号”分组，查询未借出的图书中，作者在同一家出版社所出版书的种类以及这些书中最高价大于90的相关信息。
USE 图书管理系统
SELECT 作者编号,出版社编号,
COUNT(类别编号)AS 种类,
MAX(定价) AS 最高价
FROM 图书明细表
WHERE 是否借出=0
GROUP BY 作者编号,出版社编号
HAVING MAX(定价)>90
在查询结果窗口中显示未借出图书中，按“作者编号”和“出版社编号”分组，作者在同一家出版社所出版书的种类和这些书中最高价大于90的相关信息。如图6-37所示。
6.3.4  COMPUTE和COMPUTE BY子句
1.例如，使用COMPUTE子句生成数据库“经销商”的“销售表”中“销售数量”和“金额”的求和总计。
USE 经销商
SELECT 销售人员编号,商品编号,销售数量,金额
FROM 销售表
ORDER BY 销售人员编号
COMPUTE SUM(销售数量),SUM(金额)
在查询结果窗口中不仅显示每个销售人员的销售数量和金额，还显示总销售数量和总金额，如图6-38所示。
2.在上例的COMPUTE子句中添加关键字BY，以生成每个组的小计。命令如下：
USE 经销商
SELECT 销售人员编号,商品编号,销售数量,金额
FROM 销售表
ORDER BY 销售人员编号
COMPUTE SUM(销售数量),SUM(金额) BY 销售人员编号
在查询结果窗口中显示按每个销售人员为组的销售情况，如图6-39所示。
6.4.1  联合查询
1.在用UNION子句查询时，查询结果的列标题为第一个查询语句的列标题。因此，必须在第一个查询语句中定义列标题。
例如，从数据库“图书管理系统”的“学生信息表”中，查询“系别”为“机械自动化”的学生的姓名、性别和家庭住址，并为其增加类型列“职业”，列的内容为“学生”；从“作者表”中，查询“籍贯”是“北京”的作者的姓名和性别，并增加一个列，列的内容为“作家”；最后，将两个查询结果合并在一起。
USE 图书管理系统
SELECT 姓名,性别,家庭住址,'学生' AS 职业
FROM 学生信息表
WHERE 系别='机械自动化'
UNION
SELECT 作者姓名,性别,家庭住址,'作家'
FROM 作者表
WHERE 籍贯='北京'
在查询结果窗口中显示将两个查询语句的查询结果合并为一个结果集，如图6-40所示。
2.利用UNION子句进行简单的联合查询
从数据库“经销商”中的“顾客信息表”中，查询姓王的顾客的姓名和家庭住址，并为其增加一个类型列TYPE，列的内容为“顾客”；从“销售人员表”中，查询姓王的销售人员的姓名和家庭住址，并增加一个列，列的内容为“营业员”；然后，将两个查询结果合并在一起。
USE 经销商
SELECT 姓名,家庭住址,'顾客' AS TYPE
FROM 顾客信息表
WHERE 姓名 LIKE '王%'
UNION
SELECT 姓名,家庭住址,'营业员'
FROM 销售人员表
WHERE 姓名 LIKE '王%'
在查询结果窗口中显示将两个查询语句的查询结果合并为一个结果集，如图6-41所示。
3.例如，从数据库“图书管理系统”的“工作人员”表中，查询“性别”为“女”的工作人员的姓名、性别和联系电话，并为其增加类型列“职能”，列的内容为“图书管理”；从“作者表”中，查询“籍贯”是“北京”的作者的姓名、性别和联系电话，并增加一个列，列的内容为“图书编辑”；最后，将两个查询结果合并在一起，并按类型“职能”的升序排列。
USE 图书管理系统
SELECT 姓名,性别,联系电话,'图书管理' AS 职能
FROM 工作人员
WHERE 性别='女'
UNION
SELECT 作者姓名,性别,电话,'图书编辑'
FROM 作者表
WHERE 籍贯='河北石家庄'
ORDER BY 职能
在查询结果窗口中显示对联合查询结果按“职能”进行排序，如图6-42所示。
6.4.2  连接查询
1.例如，列出数据库“图书管理系统”的“作者表”和“出版社信息表”中位于同一城市的作者和出版社。
USE 图书管理系统
SELECT *
FROM 作者表 AS a INNER JOIN 出版社信息表 AS b
ON a.籍贯=b.出版社所在城市
列出的查询结果如图6-43所示。
2.例如，列出数据库“图书管理系统”的“作者表”和“出版社信息表”中位于同一城市的作者和出版社，并删除重复列“籍贯”。
USE 图书管理系统
SELECT a.*,b.出版社编号,b.出版社名称,b.出版社电话
FROM 作者表 AS a INNER JOIN 出版社信息表 AS b
ON a.籍贯=b.出版社所在城市
列出的查询结果如图6-44所示。
3.例如，在数据库“图书管理系统”中，以在同一个城市的出版社和作者为条件，对“出版社信息表”和“作者表”进行左外连接查询。
USE 图书管理系统
SELECT a.作者姓名,a.性别,a.籍贯 AS 所在城市,b.出版社名称
FROM 作者表 AS a LEFT OUTER JOIN 出版社信息表 AS b
ON a.籍贯=b.出版社所在城市
ORDER BY 作者姓名
在查询结果窗口中，显示左表中指定列的所有行和对应连接列的所有行，在左表中没有找到相匹配的右表的对应位置填上NULL，如图6-45所示。
4.例如，在数据库“图书管理系统”中，以在同一个城市的出版社和作者为条件，对“出版社信息表”和“作者表”进行右外连接查询。
USE 图书管理系统
SELECT a.作者姓名,a.性别,a.籍贯 AS 所在城市,b.出版社名称
FROM 作者表 AS a RIGHT OUTER JOIN 出版社信息表 AS b
ON a.籍贯=b.出版社所在城市
ORDER BY 作者姓名
在查询结果窗口中，显示右表中指定列的所有行和对应连接列的所有行，在右表中没有找到相匹配的左表的对应位置填上NULL，如图6-46所示。
5.例如，在数据库“图书管理系统”中，以在同一个城市的出版社和作者为条件，对“出版社信息表”和“作者表”进行完全连接查询。
USE 图书管理系统
SELECT a.作者姓名,a.性别,a.籍贯 AS 所在城市,b.出版社名称
FROM 作者表 AS a FULL OUTER JOIN 出版社信息表 AS b
ON a.籍贯=b.出版社所在城市
ORDER BY 作者姓名
在查询结果窗口中显示相连接的两个表的所有记录，在没有找到相匹配的位置上填上NULL，如图6-47所示。
6.例如，在数据库“经销商”中，对“销售人员表”和“顾客表”做交叉查询。
USE 经销商
SELECT a.姓名,a.家庭住址, b.姓名,b.家庭住址
FROM 销售人员表 AS a CROSS JOIN 顾客信息表 AS b
ORDER BY a.姓名
查询结果包含160行，即“销售人员表”的行数8乘以“顾客表”的行数20。其查询结果是“销售人员表”的每一行与“顾客表”的每一行匹配，查询结果如图6-48所示。
7.例如，使用自连接在数据库“图书管理系统”的“作者表”中查找籍贯是“河北石家庄”的作者。
USE 图书管理系统
SELECT a.作者姓名,a.性别,b.作者姓名,b.性别
FROM 作者表 AS a INNER JOIN 作者表 AS b
ON a.籍贯=b.籍贯
WHERE a.籍贯='河北石家庄'
ORDER BY a.作者姓名
由于此查询涉及“作者表”与其自身的连接，因此“作者表”以两种角色显示。若要区分这两个角色，必须在FROM子句中为“作者表”提供两个不同的别名（a和b）。这两个别名用来限定查询中的列名，查询结果如图6-49所示。
8.如果想要消除作者与其自身匹配的行，则只需在上述语句中添加一个限定条件，即将上述语句改写为：
USE 图书管理系统
SELECT a.作者姓名,a.性别,b.作者姓名,b.性别
FROM 作者表 AS a INNER JOIN 作者表 AS b
ON a.籍贯=b.籍贯
WHERE a.籍贯='河北石家庄' AND a.作者姓名<>b.作者姓名
ORDER BY a.作者姓名
其查询结果如图6-50所示。比较图6-49和图6-50，我们可以看到，在图6-50所示的查询结果中消除了作者与自身匹配的行。
6.4.3  子查询
1.例如，从数据库“图书管理系统”中，查询已经借出的图书信息。
USE 图书管理系统
SELECT 图书名称,类别编号,作者编号,出版社编号,出版日期,定价
FROM 图书明细表
WHERE 图书编号 IN(SELECT 图书编号 FROM 借出信息)
在查询结果窗口中显示已借出的图书信息，如图6-51所示。
2.例如，从数据库“经销商”中，查询销售金额高于6000的商品信息。
USE 经销商
SELECT *
FROM 商品信息表
WHERE 商品编号>ANY(SELECT 商品编号 FROM 销售表 WHERE 金额>6000 )
在查询结果窗口中显示销售金额大于6000的商品信息，如图6-52所示。
3.例如，从数据库“图书管理系统”中，查询在“出版社编号”为1005的出版社出版过图书的作者信息。
USE 图书管理系统
SELECT *
FROM 作者表
WHERE  EXISTS
(SELECT * FROM 图书明细表
WHERE 作者表.作者编号=作者编号 AND 出版社编号='1005')
在查询结果窗口中显示在“出版社编号”为1005的出版社出版过图书的作者信息，如图6-53所示。
6.4.4  基于查询生成新表
例如，从数据库“图书管理系统”的“作者表”中，查询籍贯不是北京的作者信息，并将查询结果保存到新表“非京籍作者表”中。
USE 图书管理系统
SELECT *
INTO 非京籍作者表
FROM 作者表
WHERE  籍贯!='北京'
执行结果在数据库“图书管理系统”中新建一个新表“非京籍作者表”，并将查询结果保存到这个表中。可以通过打开【企业管理器】来查看新表及其数据，也可以在【查询分析器】的命令窗口中输入下列语句进行查看：
USE 图书管理系统
SELECT *
FROM 非京籍作者表
查询结果如图6-54所示。
上机练习6-1：使用GROUP BY子句查询
在“经销商”数据库中创建了如下两个表，要求在“雇员表”中添加列“雇员代号”、“雇员姓名”和“通信地址”，并指定列“雇员代号”标识为IDENTITY(10001,1)和关键字段；在“订单表”中添加列“订单号”、“雇员代号”、“客户代号”、“定购日期”和“定购金额”，并指定列“订单号”为关键字段：
  CREATE TABLE 雇员表
    ( 雇员代号  int  IDENTITY(10001,1)  PRIMARY KEY NONCLUSTERED,
     雇员姓名  varchar(20)  NOT NULL,
     通信地址  varchar(200)     NULL
    )
  CREATE TABLE 订单表
    ( 订单号   int   IDENTITY(1,1) PRIMARY KEY,
     雇员代号  int   NOT NULL,
     客户代号  int   NOT NULL,
     订购日期  datetime   NOT NULL,
     订购金额  money   NOT NULL
    )
现在需要获得2003年9月1日每个雇员的最高的一笔销售金额，要求列出“雇员代号”、“雇员姓名”、“订购日期”、最高的“订购金额”。
USE 经销商
SELECT a.雇员代号,a.雇员姓名,b.订购日期,MAX(订购金额)
FROM 雇员表 AS a LEFT OUTER JOIN 定单表 AS b
ON a.雇员代号 = b.雇员代号 AND b.订购日期 = '09/01/2003'
GROUP BY a.雇员代号,a.雇员姓名,b.订购日期
上机练习6-2：使用比较运算符的子查询
在示例数据库pubs中，假定每个出版商只位于一个城市，现在查询居住在Algodata Infosystems所在城市中的作者的姓名，可以通过由简单的等号(=)比较运算符引入的子查询编写一条语句。
USE pubs
SELECT au_lname, au_fname
FROM authors
WHERE city =
   (SELECT city
   FROM publishers
   WHERE pub_name = 'Algodata Infosystems')
下面是结果集：
au_lname      au_fname
--------      --------
Carson      Cheryl
Bennet      Abraham

(2 row(s) affected)








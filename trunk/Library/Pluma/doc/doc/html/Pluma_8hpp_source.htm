<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Pluma - Plug-in Management Framework</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.png" title="Pluma home" alt="Pluma logo" />
        </div>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">Pluma.hpp</div>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// Pluma - Plug-in Management Framework</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2010-2012 Gil Costa (gsaurus@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef PLUMA_PLUMA_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define PLUMA_PLUMA_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;Pluma/Config.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;Pluma/Provider.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;Pluma/PluginManager.hpp&gt;</span>
<a name="l00034"></a>00034 
<a name="l00036"></a>00036 <span class="comment">// Andy macro to convert parameter to string</span>
<a name="l00038"></a>00038 <span class="comment"></span><span class="preprocessor">#define PLUMA_2STRING(X) #X</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00041"></a>00041 <span class="comment">// Macro that helps host applications defining</span>
<a name="l00042"></a>00042 <span class="comment">// their provider classes</span>
<a name="l00044"></a>00044 <span class="comment"></span><span class="preprocessor">#define PLUMA_PROVIDER_HEADER(TYPE)\</span>
<a name="l00045"></a>00045 <span class="preprocessor">PLUMA_PROVIDER_HEADER_BEGIN(TYPE)\</span>
<a name="l00046"></a>00046 <span class="preprocessor">virtual TYPE* create() const = 0;\</span>
<a name="l00047"></a>00047 <span class="preprocessor">PLUMA_PROVIDER_HEADER_END</span>
<a name="l00048"></a>00048 <span class="preprocessor"></span>
<a name="l00050"></a>00050 <span class="comment">// Macro that generate first part of the provider definition</span>
<a name="l00052"></a>00052 <span class="comment"></span><span class="preprocessor">#define PLUMA_PROVIDER_HEADER_BEGIN(TYPE)\</span>
<a name="l00053"></a>00053 <span class="preprocessor">class TYPE##Provider: public pluma::Provider{\</span>
<a name="l00054"></a>00054 <span class="preprocessor">private:\</span>
<a name="l00055"></a>00055 <span class="preprocessor">    friend class pluma::Pluma;\</span>
<a name="l00056"></a>00056 <span class="preprocessor">    static const unsigned int PLUMA_INTERFACE_VERSION;\</span>
<a name="l00057"></a>00057 <span class="preprocessor">    static const unsigned int PLUMA_INTERFACE_LOWEST_VERSION;\</span>
<a name="l00058"></a>00058 <span class="preprocessor">    static const std::string PLUMA_PROVIDER_TYPE;\</span>
<a name="l00059"></a>00059 <span class="preprocessor">    std::string plumaGetType() const{ return PLUMA_PROVIDER_TYPE; }\</span>
<a name="l00060"></a>00060 <span class="preprocessor">public:\</span>
<a name="l00061"></a>00061 <span class="preprocessor">    unsigned int getVersion() const{ return PLUMA_INTERFACE_VERSION; }</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span>
<a name="l00064"></a>00064 <span class="comment">// Macro that generate last part of the provider definition</span>
<a name="l00066"></a>00066 <span class="comment"></span><span class="preprocessor">#define PLUMA_PROVIDER_HEADER_END };</span>
<a name="l00067"></a>00067 <span class="preprocessor"></span>
<a name="l00069"></a>00069 <span class="comment">// Macro that generate the provider declaration</span>
<a name="l00071"></a>00071 <span class="comment"></span><span class="preprocessor">#define PLUMA_PROVIDER_SOURCE(TYPE, Version, LowestVersion)\</span>
<a name="l00072"></a>00072 <span class="preprocessor">const std::string TYPE##Provider::PLUMA_PROVIDER_TYPE = PLUMA_2STRING( TYPE );\</span>
<a name="l00073"></a>00073 <span class="preprocessor">const unsigned int TYPE##Provider::PLUMA_INTERFACE_VERSION = Version;\</span>
<a name="l00074"></a>00074 <span class="preprocessor">const unsigned int TYPE##Provider::PLUMA_INTERFACE_LOWEST_VERSION = LowestVersion;</span>
<a name="l00075"></a>00075 <span class="preprocessor"></span>
<a name="l00076"></a>00076 
<a name="l00078"></a>00078 <span class="comment">// Macro that helps plugins generating their provider implementations</span>
<a name="l00079"></a>00079 <span class="comment">// PRE: SPECIALIZED_TYPE must inherit from BASE_TYPE</span>
<a name="l00081"></a>00081 <span class="comment"></span><span class="preprocessor">#define PLUMA_INHERIT_PROVIDER(SPECIALIZED_TYPE, BASE_TYPE)\</span>
<a name="l00082"></a>00082 <span class="preprocessor">class SPECIALIZED_TYPE##Provider: public BASE_TYPE##Provider{\</span>
<a name="l00083"></a>00083 <span class="preprocessor">public:\</span>
<a name="l00084"></a>00084 <span class="preprocessor">    BASE_TYPE * create() const{ return new SPECIALIZED_TYPE (); }\</span>
<a name="l00085"></a>00085 <span class="preprocessor">};</span>
<a name="l00086"></a>00086 <span class="preprocessor"></span>
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 <span class="keyword">namespace </span>pluma{
<a name="l00089"></a>00089 
<a name="l00094"></a><a class="code" href="classpluma_1_1Pluma.htm">00094</a> <span class="keyword">class </span><a class="code" href="classpluma_1_1Pluma.htm" title="Pluma plugins management.">Pluma</a>: <span class="keyword">public</span> <a class="code" href="classpluma_1_1PluginManager.htm" title="Manages loaded plugins.">PluginManager</a>{
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 <span class="keyword">public</span>:
<a name="l00101"></a>00101     <a class="code" href="classpluma_1_1Pluma.htm#adf4e065f5169931f6290f3828b49e7bb" title="Default Constructor.">Pluma</a>();
<a name="l00102"></a>00102 
<a name="l00114"></a>00114     <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Prov<span class="keywordtype">id</span>erType&gt;
<a name="l00115"></a>00115     <span class="keywordtype">void</span> <a class="code" href="classpluma_1_1Pluma.htm#a73e15a18747b5efeb917b021c7a6f8e6" title="Tell Pluma to accept a certain type of providers.">acceptProviderType</a>();
<a name="l00116"></a>00116 
<a name="l00127"></a>00127     <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Prov<span class="keywordtype">id</span>erType&gt;
<a name="l00128"></a>00128     <span class="keywordtype">void</span> <a class="code" href="classpluma_1_1Pluma.htm#a8e6f84a44a4d286ab25056072abb3d34" title="Get the stored providers of a certain type.">getProviders</a>(std::vector&lt;ProviderType*&gt;&amp; providers);
<a name="l00129"></a>00129 };
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="preprocessor">#include &lt;Pluma/Pluma.inl&gt;</span>
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 }
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 <span class="preprocessor">#endif // PLUMA_PLUMA_HPP</span>
<a name="l00137"></a>00137 <span class="preprocessor"></span>
<a name="l00138"></a>00138 
</pre></div></div>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2011 Gil Costa, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.7.4</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>

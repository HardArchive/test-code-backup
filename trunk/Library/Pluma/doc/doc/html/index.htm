<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Pluma - Plug-in Management Framework</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.png" title="Pluma home" alt="Pluma logo" />
        </div>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li class="current"><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Pluma Documentation</div>  </div>
</div>
<div class="contents">
<div class="textblock"><h2><a class="anchor" id="welcome"></a>
Welcome</h2>
<p>Welcome to Pluma documentation. Here you will find a detailed view of all Pluma <a href="./annotated.htm">classes</a>.<br/>
 If you are looking for support, you can visit the official website at <a href="http://pluma-framework.sourceforge.net/">http://pluma-framework.sourceforge.net/</a>.<br/>
<br/>
</p>
<p>CSS based on <a href="http://www.sfml-dev.org/documentation/1.6/">SFML1.6 documentation</a><br/>
</p>
<h2><a class="anchor" id="example"></a>
Short Example</h2>
<p>A short example to demonstrate Pluma usage:<br/>
 A host application define a Device interface. A certain plugin defines a Keyboard, witch is a Device. The host will use DeviceProviders to create objects of type Device. The plugin will provide host specifically with a KeyboardProvider.<br/>
</p>
<p>Device hpp (shared): </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &lt;Pluma/Pluma.hpp&gt;</span>
 <span class="keyword">class </span>Device{
 <span class="keyword">public</span>:
     <span class="keyword">virtual</span> std::string getDescription() <span class="keyword">const</span> = 0;
 };
 <span class="comment">// create DevicedProvider class</span>
 PLUMA_PROVIDER_HEADER(Device);
</pre></div><p>Device cpp (shared): </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &quot;Device.hpp&quot;</span>
 generate DevicedProvider with version 6, and compatible with at least v.3
 PLUMA_PROVIDER_SOURCE(Device, 6, 3);
</pre></div><p><br/>
 Keyboard code on the plugin side: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &lt;Pluma/Pluma.hpp&gt;</span>
<span class="preprocessor"> #include &quot;Device.hpp&quot;</span>

 <span class="keyword">class </span>Keyboard: <span class="keyword">public</span> Device{
 <span class="keyword">public</span>:
     std::string getDescription()<span class="keyword"> const</span>{
         <span class="keywordflow">return</span> <span class="stringliteral">&quot;keyboard&quot;</span>;
     }
 };

 <span class="comment">// create KeyboardProvider, it implements DeviceProvider</span>
 PLUMA_INHERIT_PROVIDER(Keyboard, Device);
</pre></div><p>plugin connector: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &lt;Pluma/Connector.hpp&gt;</span>
<span class="preprocessor"> #include &quot;Keyboard.hpp&quot;</span>

 PLUMA_CONNECTOR
 <span class="keywordtype">bool</span> connect(<a class="code" href="classpluma_1_1Host.htm" title="Manages providers.">pluma::Host</a>&amp; host){
     <span class="comment">// add a keyboard provider to host</span>
     host.<a class="code" href="classpluma_1_1Host.htm#ab673ba94ff56a12cdf2a7a25ebb8cc36" title="Add provider.">add</a>( <span class="keyword">new</span> KeyboardProvider() );
     <span class="keywordflow">return</span> <span class="keyword">true</span>;
 }
</pre></div><p>Host application code: </p>
<div class="fragment"><pre class="fragment"><span class="preprocessor"> #include &lt;Pluma/Pluma.hpp&gt;</span>

<span class="preprocessor"> #include &quot;Device.hpp&quot;</span>
<span class="preprocessor"> #include &lt;iostream&gt;</span>
<span class="preprocessor"> #include &lt;vector&gt;</span>

 <span class="keywordtype">int</span> main(){

     <a class="code" href="classpluma_1_1Pluma.htm" title="Pluma plugins management.">pluma::Pluma</a> plugins;
     <span class="comment">// Tell plugins manager to accept providers of the type DeviceProvider</span>
     plugins.<a class="code" href="classpluma_1_1Pluma.htm#a73e15a18747b5efeb917b021c7a6f8e6" title="Tell Pluma to accept a certain type of providers.">acceptProviderType</a>&lt;DeviceProvider&gt;();
     <span class="comment">// Load library &quot;standard_devices&quot; from folder &quot;plugins&quot;</span>
     plugins.<a class="code" href="classpluma_1_1PluginManager.htm#aa00400d23efa8a8f94e44dd1c5bf54e6" title="Load a plugin given it&#39;s path.">load</a>(<span class="stringliteral">&quot;plugins&quot;</span>, <span class="stringliteral">&quot;standard_devices&quot;</span>);

     <span class="comment">// Get device providers into a vector</span>
     std::vector&lt;DeviceProvider*&gt; providers;
     plugins.<a class="code" href="classpluma_1_1Pluma.htm#a8e6f84a44a4d286ab25056072abb3d34" title="Get the stored providers of a certain type.">getProviders</a>(providers);

     <span class="comment">// create a Device from the first provider</span>
     <span class="keywordflow">if</span> (!providers.empty()){
         Device* myDevice = providers.first()-&gt;create();
         <span class="comment">// do something with myDevice</span>
         std::cout &lt;&lt; device-&gt;getDescription() &lt;&lt; std::endl;
         <span class="comment">// and delete it in the end</span>
         <span class="keyword">delete</span> myDevice;
     }
     <span class="keywordflow">return</span> 0;
 }
</pre></div> </div></div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2011 Gil Costa, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.7.4</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>

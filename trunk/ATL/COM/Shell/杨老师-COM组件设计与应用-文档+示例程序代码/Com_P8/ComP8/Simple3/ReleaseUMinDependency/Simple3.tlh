// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (b16536f2).
//
// d:\360data\重要数据\桌面\杨老师-com组件设计与应用-文档+示例程序代码\com_p8\comp8\simple3\releaseumindependency\Simple3.tlh
//
// C++ source equivalent of Win32 type library ..\Simple3\Simple3.tlb
// compiler-generated file created 06/17/11 at 11:54:01 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct /* coclass */ Mathe;
struct __declspec(uuid("072ea6ca-7d08-4e7e-b2b7-b2fb0b875595"))
/* interface */ IMathe;
struct __declspec(uuid("072ea6cb-7d08-4e7e-b2b7-b2fb0b875595"))
/* interface */ IStr;
struct __declspec(uuid("072ea6cc-7d08-4e7e-b2b7-b2fb0b875595"))
/* interface */ IMathe2;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IMathe, __uuidof(IMathe));
_COM_SMARTPTR_TYPEDEF(IStr, __uuidof(IStr));
_COM_SMARTPTR_TYPEDEF(IMathe2, __uuidof(IMathe2));

//
// Type library items
//

struct __declspec(uuid("c6f241e2-43f6-4449-a024-b7340553221e"))
Mathe;
    // [ default ] interface IMathe
    // interface IStr
    // interface IMathe2

struct __declspec(uuid("072ea6ca-7d08-4e7e-b2b7-b2fb0b875595"))
IMathe : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    long Add (
        long n1,
        long n2 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Add (
        long n1,
        long n2,
        long * pnVal ) = 0;
};

struct __declspec(uuid("072ea6cb-7d08-4e7e-b2b7-b2fb0b875595"))
IStr : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    _bstr_t Cat (
        _bstr_t s1,
        _bstr_t s2 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Cat (
        BSTR s1,
        BSTR s2,
        BSTR * psVal ) = 0;
};

struct __declspec(uuid("072ea6cc-7d08-4e7e-b2b7-b2fb0b875595"))
IMathe2 : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    long Add (
        long n1,
        long n2 );
    long Mul (
        long n1,
        long n2 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Add (
        long n1,
        long n2,
        long * pnVal ) = 0;
    virtual HRESULT __stdcall raw_Mul (
        long n1,
        long n2,
        long * pnVal ) = 0;
};

//
// Wrapper method implementations
//

#include "d:\360data\重要数据\桌面\杨老师-com组件设计与应用-文档+示例程序代码\com_p8\comp8\simple3\releaseumindependency\Simple3.tli"

#pragma pack(pop)

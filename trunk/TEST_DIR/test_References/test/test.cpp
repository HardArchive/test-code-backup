// test.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"

//引用测试
//说明引用跟指针是一回事  只是规则有点不同
// 
//（1）&；在此不是求地址运算，而是起标识作用。
//（2）类型标识符是指目标变量的类型。
//（3）声明引用时，必须同时对其进行初始化。
//（4）引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。
//     ra=1; 等价于 a=1;
//（5）声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身不是一种数据类型，
//     因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&ra与&a相等。
//（6）可以建立数组的引用。int m[10]={1,2,3,4,5,6,7,8,9,10}; int (&n)[10]=m; 
// 
//指针和引用的联系与区别 
//★ 相同点：
//1. 都是地址的概念；
//指针指向一块内存，它的内容是所指内存的地址；引用是某块内存的别名。
//
//★ 区别：
//1. 指针是一个实体，而引用仅是个别名；
//2. 引用使用时无需解引用(*)，指针需要解引用；
//3. 引用只能在定义时被初始化一次，之后不可变；指针可变；
//4. 引用没有 const，指针有 const；
//5. 引用不能为空，指针可以为空；
//6. “sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身(所指向的变量或对象的地址)的大小；
//7. 指针和引用的自增(++)运算意义不一样；
//8. 从内存分配上看：程序为指针变量分配内存区域，而引用不需要分配内存区域。
int _tmain(int argc, _TCHAR* argv[])
{
	int i1 = 15;
	int& i2 = i1;

	i1 = 30;

	i2 = 40;
	return 0;
}

